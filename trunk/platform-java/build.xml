<?xml version="1.0"?>

<project name="platform" default="deploy" basedir=".">

        <!-- Give user a chance to override without editing this file or typing -D -->
        <property file="${basedir}/build.properties" />

        <property name="profile" value="dev" />
        <property file="build-${profile}.properties" />

		<property name="plaftform.dir" value="${platform.project.dir}"/>
		
        <!-- set global properties for this build -->
        <property name="project.name" value="platform"/>
        <property name="dist.dir" value="dist" />
        <property name="src.java.dir" value="src/main/java" />
        <property name="src.resources.dir" value="src/main/resources" />
        <property name="lib.dir" value="${locallibpath}" />
		<property name="bin.dir" value="${basedir}/bin"/>
		<property name="web.dir" value="web"/>
        <property name="ear.dir" value="exploded-archives/${project.name}.ear" />
        <property name="jar.dir" value="exploded-archives/${project.name}.jar" />
        <property name="war.dir" value="exploded-archives/${project.name}.war" />
		<property name="web.dir" value="exploded-archives/${project.name}.bin" />
        <property name="test.dir" value="test-build" />
        <property name="bootstrap.dir" value="${basedir}/bootstrap" />
        <property name="deploy.dir" value="${jboss.home}/server/default/deploy" />
        <property name="ear.deploy.dir" value="${deploy.dir}/${project.name}.ear" />
        <property name="jar.deploy.dir" value="${ear.deploy.dir}/${project.name}.jar" />
        <property name="war.deploy.dir" value="${ear.deploy.dir}/${project.name}.war" />
        <property name="testng.jar" value="${basedir}/lib/testng.jar" />
        <property name="javac.debug" value="true" />
        <property name="javac.deprecation" value="false" />
        <property name="debug" value="false" />
	
		<!--Properties for validating configuration files -->
		<property name="validate.resources.dir" value="${basedir}/exploded-archives" />
		<property name="schema.dir" value="${basedir}/exploded-archives/schemas" />
		<property name="src.schema.dir" value="${schema.dir}/org/jboss/seam"/>
		<property name="schema.version" value="2.0" />
	
        <fileset id="lib" dir="${lib.dir}">
                <include name="*.jar" />
        </fileset>

        <path id="build.classpath">
                <fileset refid="lib" />
        </path>

        <target name="init" description="Initialize the build">

        </target>

        <target name="compile" depends="init" 
                        description="Compile the Java source code"
                    unless="eclipse.running">
                <javac classpathref="build.classpath" 
                                destdir="${bin.dir}" 
                                  debug="${javac.debug}" encoding="utf-8" 
                            deprecation="${javac.deprecation}" 
                                nowarn="on">
                        <src path="${src.java.dir}" />
                </javac>
        		<copy todir="${bin.dir}">
        			  <fileset dir="${src.resources.dir}" />
        		</copy>
        </target>

        <target name="copyclasses" depends="init" 
                        description="Copy the classes that were compiled by eclipse"
                    if="eclipse.running">
                <copy todir="${jar.dir}">
                        <fileset dir="classes/model">
                                <include name="**/*.class"/>
                        </fileset>
                        <fileset dir="classes/action">
                                <include name="**/*.class"/>
                        </fileset>
                </copy>
        </target>


        <target name="war" depends="compile" 
                        description="Build the distribution .war file">
                <copy todir="${war.dir}"  encoding="utf-8" outputencoding="utf-8">
                        <fileset dir="${basedir}/view" />
                </copy>
                <copy todir="${war.dir}/WEB-INF" encoding="utf-8" outputencoding="utf-8">
                        <fileset dir="${basedir}/resources/WEB-INF">
                        		
                                <include name="*.*"/>
                                <include name="classes/**/*.*"/>
                        	 	<include name="facelets/**/*.*"/>
                                <exclude name="classes/**/*.class"/>
                        </fileset>
                        <filterset>
                            <filter token="debug" value="${debug}" />
                            <filter token="jndiPattern" value="${project.name}/#{ejbName}/local" />
                        </filterset>
                </copy>         
                <copy todir="${war.dir}/WEB-INF">
                        <fileset dir="${basedir}/resources/WEB-INF">
                                <include name="lib/*.*"/>
                                <include name="classes/**/*.class"/>
                        </fileset>
                </copy>         
                <copy todir="${war.dir}/WEB-INF/lib">
                        <fileset dir="${lib.dir}">
                                <includesfile name="deployed-jars-war.list" />
                                <exclude name="jboss-seam-gen.jar" />
                        </fileset>
                </copy>
                <copy todir="${war.dir}/WEB-INF/classes">
                        <fileset dir="${basedir}/resources"> 
                                <include name="messages*.properties"/>
                        </fileset>
                </copy>
        </target>

        
        <target name="archive" depends="war" 
                        description="Package the archives">
                <jar jarfile="${dist.dir}/${project.name}.jar" basedir="${jar.dir}"/>
                <jar jarfile="${dist.dir}/${project.name}.war" basedir="${war.dir}"/>
                <jar jarfile="${dist.dir}/${project.name}.ear">
                        <fileset dir="${ear.dir}"/>
                        <fileset dir="${dist.dir}">
                                <include name="${project.name}.jar"/>
                                <include name="${project.name}.war"/>
                        </fileset>
                </jar>
        </target>
        
        <target name="datasource">
                <fail unless="jboss.home">jboss.home not set</fail>
                <copy todir="${deploy.dir}">
                        <fileset dir="${basedir}/resources">
                                <include name="${project.name}-${profile}-ds.xml" />
                        </fileset>
                </copy>
        </target>
        
        <target name="explode" depends="war,datasource" 
                        description="Deploy the exploded archive">
                <fail unless="jboss.home">jboss.home not set</fail>
                
                <mkdir dir="${jar.deploy.dir}"/>
                <mkdir dir="${war.deploy.dir}"/>                
                
                <copy todir="${jar.deploy.dir}">
                        <fileset dir="${jar.dir}"/>
                </copy>
                <copy todir="${war.deploy.dir}">
                        <fileset dir="${war.dir}"/>
                </copy>
                <copy todir="${ear.deploy.dir}">
                        <fileset dir="${ear.dir}"/>
                </copy>
        </target>

        <target name="unexplode" description="Undeploy the exploded archive">
                <delete failonerror="no">
                        <fileset dir="${ear.deploy.dir}">
                                <exclude name="**/*.jar"/>
                        </fileset>
                </delete>
                <delete file="${deploy.dir}/${project.name}-${profile}-ds.xml" failonerror="no"/>
                <delete dir="${ear.deploy.dir}" failonerror="no"/>
        </target>
        
        <target name="restart" depends="explode" description="Restart the exploded archive">
                <touch file="${ear.deploy.dir}/META-INF/application.xml"/>
        </target>

        <target name="deploy" depends="compile" description="Deploy to Tomcat">
                <fail unless="tomcat.home">tomcat.home not set</fail>
        		<mkdir dir="${tomcat.home}/webapps/platform"/>
        		
                <copy todir="${tomcat.home}/webapps/platform" >
                		<fileset dir="${web.dir}"/>
                </copy>
	            <copy todir="${tomcat.home}/webapps/platform/WEB-INF/classes" >
	            		<fileset dir="${bin.dir}"/>
	            </copy>
        	  	<copy todir="${tomcat.home}/webapps/platform/WEB-INF/lib" >
        		            		<fileset dir="${lib.dir}"/>
        		</copy>
        </target>

        <target name="undeploy" description="Undeploy the example from JBoss">
                <delete file="${deploy.dir}/${project.name}.ear" />
                <delete file="${deploy.dir}/${project.name}-dev-ds.xml" />
                <delete file="${deploy.dir}/${project.name}-prod-ds.xml" />
        </target>

        <target name="clean" description="Cleans up the build directory">
                <delete dir="${dist.dir}"/>
                <delete dir="${ear.dir}"/>
                <delete dir="${war.dir}"/>
                <delete dir="${jar.dir}"/>
        		<delete dir="${src.schema.dir}" failonerror="no"/>
                <delete dir="${basedir}/test-report"/>
                <delete dir="${basedir}/test-output"/>
                <delete failonerror="no">
                        <fileset dir="${test.dir}">
                                <exclude name="**/*.class" if="eclipse.running"/>
                        </fileset>
                </delete>
        </target>

        <target name="compiletest" unless="eclipse.running" description="Compile the Java source code for the tests">
        <mkdir dir="${test.dir}"/>
        <javac classpathref="build.classpath"
                        destdir="${test.dir}"
                          debug="${javac.debug}"
                    deprecation="${javac.deprecation}"
                        nowarn="on">
                <src path="${src.action.dir}" />
                <src path="${src.model.dir}" />
                <src path="${src.test.dir}" />
        		<src path="${src.dao.dir}" />
        	    <src path="${src.service.dir}" />
        </javac>
        </target>
        
        <target name="copytestclasses" if="eclipse.running" description="Copy classes compiled by eclipse to the test dir">
        <mkdir dir="${test.dir}"/>
                <copy todir="${test.dir}">
                        <fileset dir="classes/model">
                                <include name="**/*.class"/>
                        </fileset>
                </copy>
                <copy todir="${test.dir}">
                        <fileset dir="classes/action">
                                <include name="**/*.class"/>
                        </fileset>
                </copy>
                <copy todir="${test.dir}">
                        <fileset dir="classes/test">
                                <include name="**/*.class"/>
                        </fileset>
                </copy>
        </target>
        
        <target name="buildtest" depends="compiletest,copytestclasses" description="Build the tests">
                <copy todir="${test.dir}">
                        <fileset dir="${basedir}/resources">
                                <exclude name="META-INF/persistence*.xml"/>
                                <exclude name="import*.sql"/>
                            	<exclude name="${project.name}-*-ds.xml"/>
                        </fileset>
                </copy>
                <copy tofile="${test.dir}/META-INF/persistence.xml" 
                        file="${basedir}/resources/META-INF/persistence-test.xml"
                   overwrite="true"/>
	            <copy tofile="${test.dir}/${project.name}-ds.xml" 
	                    file="${basedir}/resources/${project.name}-test-ds.xml"
	               overwrite="true"/>
                <copy tofile="${test.dir}/import.sql" 
                        file="${basedir}/resources/import-test.sql"
                   overwrite="true"/>
                <copy todir="${test.dir}" flatten="true">
                        <fileset dir="${src.test.dir}">
                                <include name="**/*Test.xml" />
                        </fileset>
                </copy>
        </target>

        <target name="test" depends="buildtest" description="Run the tests">            
                <taskdef resource="testngtasks" classpath="${testng.jar}" />
        		<path id="test.path">
        			<path path="${test.dir}" />
        			<fileset dir="${lib.dir}/test">
        				<include name="*.jar"/>
        			</fileset>
        			<path path="${bootstrap.dir}" />
        			<path refid="build.classpath" />
        		</path>
                <testng outputdir="${basedir}/test-report">
                    <classpath refid="test.path" />
                    <xmlfileset dir="${test.dir}" includes="*Test.xml" />
                </testng>
        </target>
	
	<target name="validateConfiguration" depends="war" description="Validate the xml configuration files">
		<mkdir dir="${schema.dir}"/>
		<unjar src="${lib.dir}/jboss-seam.jar" dest="${schema.dir}">
			<patternset>
				<include name="org/jboss/seam/*.xsd"/>
				<include name="org/jboss/seam/*.dtd"/>
			</patternset>
		</unjar>
		<ant antfile="validate.xml" target="validateConfiguration" />
	</target>
        
</project>
